@use "sass:math";

$utilities: (
  "padding": (
    "prefix": "p",
    "values": ("0": 0,
      "1": $base-padding,
      "2": $base-padding * 2,
      "3": $base-padding * 4,
      "4": $base-padding * 6,
      "5": $base-padding * 8,
    )
  ),

  "padding-left": (
    "prefix": "pl",
    "values": (
      "0": 0,
      "1": $base-padding,
      "2": $base-padding * 2,
      "3": $base-padding * 4,
      "4": $base-padding * 6,
      "5": $base-padding * 8,
    )
  ),

  "padding-right": (
    "prefix": "pr",
    "values": (
      "0": 0,
      "1": $base-padding,
      "2": $base-padding * 2,
      "3": $base-padding * 4,
      "4": $base-padding * 6,
      "5": $base-padding * 8,
    )
  ),

  "padding-top": (
    "prefix": "pt",
    "values": (
      "0": 0,
      "1": $base-padding,
      "2": $base-padding * 2,
      "3": $base-padding * 4,
      "4": $base-padding * 6,
      "5": $base-padding * 8,
    )
  ),

  "padding-bottom": (
    "prefix": "pb",
    "values": (
      "0": 0,
      "1": $base-padding,
      "2": $base-padding * 2,
      "3": $base-padding * 4,
      "4": $base-padding * 6,
      "5": $base-padding * 8,
    )
  ),

  "margin": (
    "prefix": "m",
    "values": (
      "0": 0,
      "1": $base-margin,
      "2": $base-margin * 2,
      "3": $base-margin * 4,
      "4": $base-margin * 6,
      "5": $base-margin * 8,
    )
  ),

  "margin-left": (
    "prefix": "ml",
    "values": (
      "0": 0,
      "1": $base-margin,
      "2": $base-margin * 2,
      "3": $base-margin * 4,
      "4": $base-margin * 6,
      "5": $base-margin * 8,
    )
  ),

  "margin-right": (
    "prefix": "mr",
    "values": (
      "0": 0,
      "1": $base-margin,
      "2": $base-margin * 2,
      "3": $base-margin * 4,
      "4": $base-margin * 6,
      "5": $base-margin * 8,
    )
  ),

  "margin-top": (
    "prefix": "mt",
    "values": (
      "0": 0,
      "1": $base-margin,
      "2": $base-margin * 2,
      "3": $base-margin * 4,
      "4": $base-margin * 6,
      "5": $base-margin * 8,
    )
  ),

  "margin-bottom": (
    "prefix": "mb",
    "values": (
      "0": 0,
      "1": $base-margin,
      "2": $base-margin * 2,
      "3": $base-margin * 4,
      "4": $base-margin * 6,
      "5": $base-margin * 8,
    )
  ),

  "text-align": (
    "prefix": "text",
    "values": (
      "start": left,
      "center": center,
      "end": right
    )
  ),

  "opacity": (
    "prefix": "o",
    "values": (
      "10": 0.1,
      "20": 0.2,
      "30": 0.3,
      "40": 0.4,
      "50": 0.5,
      "60": 0.6,
      "70": 0.7,
      "80": 0.8,
      "90": 0.9,
      "100": 1
    )
  ),

  "display": (
    "prefix": "d",
    "values": (
      "b": block,
      "n": none,
      "f": flex,
      "i": inline,
      "i-b": inline-block
    )
  ),

  "position": (
    "prefix": "p",
    "values": (
      "static": static,
      "absolute": absolute,
      "relative": relative,
      "fixed": fixed,
      "sticky": sticky
    )
  ),

  "border-radius": (
    "prefix": "br",
    "values": (
      "default": $base-border-radius,
      "none": 0,
      "1": math.div($base-border-radius, 4),
      "2": math.div($base-border-radius, 2),
      "3": $base-border-radius * 2,
      "full": 50%
    )
  ),

  "font-weight": (
    "prefix": "fw",
    "values": (
      "light": 200,
      "bold": bold,
      "bolder": bolder,
      "semibold": 500,
      "regular": normal
    )
  ),

  "font-size": (
    "prefix": "font",
    "values": (
      "sm": $font-size-sm,
      "md": $font-size-md,
      "lg": $font-size-lg,
      "xl": $font-size-xl,
      "xxl": $font-size-xxl
    )
  ),

  "width": (
    "prefix": "w",
    "values": (
      "25": 25%,
      "50": 50%,
      "75": 75%,
      "100": 100%,
      "auto": auto
    )
  ),
  
  "box-shadow": (
    "prefix": "shadow",
    "values": (
      "default": (0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)),
      "1": (0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)),
      "2": (0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)),
      "3": (0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)),
      "4": 0 25px 50px -12px rgb(0 0 0 / 0.25),
      "inner": inset 0 2px 4px 0 rgb(0 0 0 / 0.05),
      "none": 0 0 #0000
    )
  )
);

$spacing-x: (
  "padding": (
    "prefix": "px",
    "values": ("0": 0,
      "1": 0 $base-padding,
      "2": 0 $base-padding * 2,
      "3": 0 $base-padding * 4,
      "4": 0 $base-padding * 6,
      "5": 0 $base-padding * 8,
    )
  ),
  "margin": (
    "prefix": "mx",
    "values": ("0": 0,
      "1": 0 $base-padding,
      "2": 0 $base-padding * 2,
      "3": 0 $base-padding * 4,
      "4": 0 $base-padding * 6,
      "5": 0 $base-padding * 8,
    )
  ),
);

$spacing-y: (
  "padding": (
    "prefix": "py",
    "values": ("0": 0,
      "1": $base-padding 0,
      "2": $base-padding * 2 0,
      "3": $base-padding * 4 0,
      "4": $base-padding * 6 0,
      "5": $base-padding * 8 0,
    )
  ),
  "margin": (
    "prefix": "my",
    "values": ("0": 0,
      "1": $base-padding 0,
      "2": $base-padding * 2 0,
      "3": $base-padding * 4 0,
      "4": $base-padding * 6 0,
      "5": $base-padding * 8 0,
    )
  ),
);

@each $property, $map in $utilities {
  $prefix: map-get($map, "prefix");
  $values: map-get($map, "values");

  @each $k, $v in $values {
    @if($k == "default") {
      .#{$prefix} {
        #{$property}: $v !important;
      }
    } @else {
      .#{$prefix}-#{$k}{
        #{$property}: $v !important;
      }
    }
  }
}

@each $property, $map in $spacing-x {
  $prefix: map-get($map, "prefix");
  $values: map-get($map, "values");

  @each $k, $v in $values {
    @if($k == "default") {
      .#{$prefix} {
        #{$property}: $v !important;
      }
    } @else {
      .#{$prefix}-#{$k}{
        #{$property}: $v !important;
      }
    }
  }
}

@each $property, $map in $spacing-y {
  $prefix: map-get($map, "prefix");
  $values: map-get($map, "values");

  @each $k, $v in $values {
    @if($k == "default") {
      .#{$prefix} {
        #{$property}: $v !important;
      }
    } @else {
      .#{$prefix}-#{$k}{
        #{$property}: $v !important;
      }
    }
  }
}
 
@mixin create-utilities-classes($bp) {
  @each $property, $map in $utilities {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");
  
    @each $k, $v in $values {
      @if($k == "default") {
        .#{$prefix}-#{$bp} {
          #{$property}: $v !important;
        }
      } @else {
        .#{$prefix}-#{$bp}-#{$k}{
          #{$property}: $v !important;
        }
      }
    }
  }

  @each $property, $map in $spacing-x {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");
  
    @each $k, $v in $values {
      @if($k == "default") {
        .#{$prefix}-#{$bp} {
          #{$property}: $v !important;
        }
      } @else {
        .#{$prefix}-#{$bp}-#{$k}{
          #{$property}: $v !important;
        }
      }
    }
  }
  
  @each $property, $map in $spacing-y {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");
  
    @each $k, $v in $values {
      @if($k == "default") {
        .#{$prefix}-#{$bp} {
          #{$property}: $v !important;
        }
      } @else {
        .#{$prefix}-#{$bp}-#{$k}{
          #{$property}: $v !important;
        }
      }
    }
  }
}

@include xs {
  @include create-utilities-classes(xs)
}

@include sm {
  @include create-utilities-classes(sm)
}

@include md {
  @include create-utilities-classes(md)
}

@include lg {
  @include create-utilities-classes(lg)
}

@include xl {
  @include create-utilities-classes(xl)
}

@include xxl {
  @include create-utilities-classes(xxl)
}
